{"ast":null,"code":"import _classCallCheck from \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maryamkamali/Desktop/apathon/Caracal-MDB/src/pages/FirstPage.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\"; // import axios from 'axios';\n\nimport costs from './costs.json'; // Doughnut Chart\n\nvar dataDoughnut = {\n  labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n  datasets: [{\n    data: [300, 50, 100, 40, 120],\n    backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n    hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\"]\n  }]\n};\n\nvar FirstPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FirstPage, _React$Component);\n\n  function FirstPage() {\n    _classCallCheck(this, FirstPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FirstPage).apply(this, arguments));\n  }\n\n  _createClass(FirstPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // axios.get(\"./costs.json\").then(res => {\n      //   console.log(res);\n      // })\n      console.log(costs); // const ref = new URL(window.location.href);\n      // const code = ref.searchParams.get(\"code\");\n      // axios.post('http://192.168.25.147:3000/token', {\n      //     \"authorizationCode\": code\n      //   })\n      //   .then(res => {\n      //     const token = res.data.access_token;\n      //     axios.get('http://192.168.25.147:3000/account/balances?accountNumber=0110008020006', {\"authorizatio\":\"Bearer \"+token}).then(response => {\n      //         console.log(response);\n      //     })\n      //     console.log(res);\n      //     console.log(res.data.access_token);\n      //   })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var labels = [];\n      var datasets = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = costs.costs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var cost = _step.value;\n          labels.push(cost.name);\n          datasets.push(cost.price);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var dataDoughnut = {\n        labels: labels,\n        datasets: [{\n          data: datasets,\n          backgroundColor: [\"#ff4444\", \"#ffbb33\", \"#00C851\", \"#33b5e5\", \"#4D5360\", \"#2BBBAD\", \"#4285F4\", \"#aa66cc\"],\n          hoverBackgroundColor: [\"#ff4444\", \"#ffbb33\", \"#00C851\", \"#33b5e5\", \"#4D5360\", \"#2BBBAD\", \"#4285F4\", \"#aa66cc\"]\n        }]\n      };\n      var doughnuts = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = costs.costs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _cost = _step2.value;\n          var _dataDoughnut = {\n            labels: [\"مصرف شده\", \"باقیمانده\"],\n            datasets: [{\n              data: [_cost.price, _cost.remained],\n              backgroundColor: [\"#F7464A\", \"#46BFBD\"],\n              hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\"]\n            }]\n          };\n          doughnuts.push(React.createElement(\"div\", {\n            key: _cost,\n            className: \"col-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            className: \"mt-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, _cost.name), React.createElement(Doughnut, {\n            data: _dataDoughnut,\n            options: {\n              responsive: true\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          })));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Doughnut Chart\"), React.createElement(Doughnut, {\n        data: dataDoughnut,\n        options: {\n          responsive: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, doughnuts));\n    }\n  }]);\n\n  return FirstPage;\n}(React.Component);\n\nexport default FirstPage;","map":{"version":3,"sources":["/Users/maryamkamali/Desktop/apathon/Caracal-MDB/src/pages/FirstPage.js"],"names":["React","Doughnut","MDBContainer","costs","dataDoughnut","labels","datasets","data","backgroundColor","hoverBackgroundColor","FirstPage","console","log","cost","push","name","price","doughnuts","remained","responsive","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n// import axios from 'axios';\nimport costs from './costs.json'\n// Doughnut Chart\nconst dataDoughnut = {\n    labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n    datasets: [\n      {\n        data: [300, 50, 100, 40, 120],\n        backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n        hoverBackgroundColor: [\n          \"#FF5A5E\",\n          \"#5AD3D1\"\n        ]\n      }\n    ]\n  };\nclass FirstPage extends React.Component {\n    componentDidMount() {\n        // axios.get(\"./costs.json\").then(res => {\n        //   console.log(res);\n        // })\n        console.log(costs);\n      // const ref = new URL(window.location.href);\n      // const code = ref.searchParams.get(\"code\");\n      // axios.post('http://192.168.25.147:3000/token', {\n      //     \"authorizationCode\": code\n      //   })\n      //   .then(res => {\n      //     const token = res.data.access_token;\n\n      //     axios.get('http://192.168.25.147:3000/account/balances?accountNumber=0110008020006', {\"authorizatio\":\"Bearer \"+token}).then(response => {\n      //         console.log(response);\n      //     })\n      //     console.log(res);\n      //     console.log(res.data.access_token);\n      //   })\n    }\n    render() {\n      let labels = [];\n      let datasets = [];\n      for (let cost of costs.costs){\n        labels.push(cost.name);\n        datasets.push(cost.price);\n      }\n      const dataDoughnut = {\n        labels: labels,\n        datasets: [\n          {\n            data: datasets,\n            backgroundColor: [\"#ff4444\", \"#ffbb33\", \"#00C851\", \"#33b5e5\", \"#4D5360\", \"#2BBBAD\", \"#4285F4\", \"#aa66cc\"],\n            hoverBackgroundColor: [\n              \"#ff4444\", \"#ffbb33\", \"#00C851\", \"#33b5e5\", \"#4D5360\", \"#2BBBAD\", \"#4285F4\", \"#aa66cc\"\n            ]\n          }\n        ]\n      };\n      let doughnuts = []\n      for (let cost of costs.costs){\n        const dataDoughnut = {\n          labels: [\"مصرف شده\", \"باقیمانده\"],\n          datasets: [\n            {\n              data: [cost.price, cost.remained],\n              backgroundColor: [\"#F7464A\", \"#46BFBD\"],\n              hoverBackgroundColor: [\n                \"#FF5A5E\",\n                \"#5AD3D1\",\n              ]\n            }\n          ]\n        };\n          doughnuts.push(<div key={cost} className=\"col-sm\">\n          <h3 className=\"mt-3\">{cost.name}</h3>\n          <Doughnut data={dataDoughnut} options={{ responsive: true }} />\n          </div>);\n      }\n        return (\n            <MDBContainer>\n                <div className=\"row\">\n                <div className=\"col-sm\">\n              <h3 className=\"mt-3\">Doughnut Chart</h3>\n              <Doughnut data={dataDoughnut} options={{ responsive: true }} />\n            </div>\n                </div>\n                <div className=\"row\">\n           {doughnuts}\n            </div>\n          </MDBContainer>\n        )\n    }\n}\nexport default FirstPage;"]},"metadata":{},"sourceType":"module"}